import typer
import os
import sys
import platform
import time
import inquirer

class NotUsingWindows(Exception):
    pass

class UnsupportedEdition(Exception):
    pass

# Define the product keys dictionary
product_keys = {
    'home': 'TX9XD-98N7V-6WMQ6-BX7FG-H8Q99',
    'pro': 'W269N-WFGWX-YVC9B-4J6C9-T83GX',
    'education': 'NW6C2-QMPVW-D7KKK-3GKT6-VCFB2',
    'enterprise': 'NPPR9-FWDCX-D2C8J-H872K-2YT43',
    'professional': 'W269N-WFGWX-YVC9B-4J6C9-T83GX'
}

def crack(edition):
    edition = edition.lower()
    if edition in product_keys:
        product_key = product_keys[edition]
        os.system(f"slmgr /ipk {product_key}")
        os.system("slmgr /skms kms8.msguides.com")
        os.system("slmgr /ato")

app = typer.Typer()

@app.command()
def manual(edition: str):
    restartQ = [inquirer.List('restart', message="Would you prefer to restart now to apply changes?", choices=['Sure', 'Not now'],)]
    edition = edition.lower()
    edit = edition.capitalize()
    if not (edition in product_keys):
        raise UnsupportedEdition("Invalid edition or it does not exist.")
    print(f"Attempting to crack the {edit} Edition.")
    crack(edition)
    print("The dialogs should have told you whether it was success or no.")
    print("If it required permissions, open command prompt as administrator and then run the python file to work.")
    restartQ = inquirer.prompt(restartQ)
    if restartQ["restart"] == "Sure":
        print("Ok, restarting in 30 seconds. Save your work if you haven't!")
        time.sleep(30)
        os.system("shutdown /s /f /t 0")

@app.command()
def automatic():
    restartQ = [inquirer.List('restart', message="Would you prefer to restart now to apply changes?", choices=['Sure', 'Not now'],)]
    edition = (platform.win32_edition()).lower()
    crack(edition)
    print("The dialogs should have told you whether it was success or no.")
    print("If it required permissions, open command prompt as administrator and then run the python file to work.")
    restartQ = inquirer.prompt(restartQ)
    if restartQ["restart"] == "Sure":
        print("Ok, restarting in 30 seconds. Save your work if you haven't!")
        time.sleep(30)
        os.system("shutdown /s /f /t 0")

def check_os_and_prompt():
    if platform.system() != 'Windows':
        raise NotUsingWindows("You are not on Windows, this script is only for Windows.")
    edition = platform.win32_edition()
    if edition.lower() not in product_keys:
        raise UnsupportedEdition("The edition of your Windows is not supported by this program.")
    
    # Ask user if they want to activate Windows 11
    questions = [
        inquirer.List(
            'activate',
            message="Would you like to activate Windows 11?",
            choices=['Yes', 'No']
        )
    ]
    answer = inquirer.prompt(questions)
    if answer['activate'] == 'No':
        print("Activation cancelled by user.")
        sys.exit()

if __name__ == "__main__":
    try:
        check_os_and_prompt()
        app()
    except Exception as e:
        print(f"Error: {e}")
